/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    ClaimTopicsRegistry: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "addClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "removeClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9,
    },
    Identity: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isLibrary",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "Approved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "Executed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionFailed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "addClaim",
          outputs: [
            {
              internalType: "bytes32",
              name: "claimRequestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_type",
              type: "uint256",
            },
          ],
          name: "addKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_approve",
              type: "bool",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "execute",
          outputs: [
            {
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "getClaim",
          outputs: [
            {
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
          ],
          name: "getClaimIdsByTopic",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "claimIds",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKey",
          outputs: [
            {
              internalType: "uint256[]",
              name: "purposes",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKeyPurposes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "_purposes",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "getKeysByPurpose",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "dataHash",
              type: "bytes32",
            },
          ],
          name: "getRecoveredAddress",
          outputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "isClaimValid",
          outputs: [
            {
              internalType: "bool",
              name: "claimValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "keyHasPurpose",
          outputs: [
            {
              internalType: "bool",
              name: "result",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "removeClaim",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "removeKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addClaim: "contracts/interface/IIdentity.sol",
        addKey: "contracts/interface/IIdentity.sol",
        approve: "contracts/interface/IIdentity.sol",
        execute: "contracts/interface/IIdentity.sol",
        getClaim: "contracts/interface/IIdentity.sol",
        getClaimIdsByTopic: "contracts/interface/IIdentity.sol",
        getKey: "contracts/interface/IIdentity.sol",
        getKeyPurposes: "contracts/interface/IIdentity.sol",
        getKeysByPurpose: "contracts/interface/IIdentity.sol",
        isClaimValid: "contracts/interface/IIdentity.sol",
        keyHasPurpose: "contracts/interface/IIdentity.sol",
        removeClaim: "contracts/interface/IIdentity.sol",
        removeKey: "contracts/interface/IIdentity.sol",
        version: "contracts/version/Version.sol",
      },
      deployedOnBlock: 3,
    },
    IdentityRegistry: {
      address: "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "ClaimTopicsRegistrySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityStorage",
              type: "address",
            },
          ],
          name: "IdentityStorageSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "trustedIssuersRegistry",
              type: "address",
            },
          ],
          name: "TrustedIssuersRegistrySet",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "contract IIdentity[]",
              name: "_identities",
              type: "address[]",
            },
            {
              internalType: "uint16[]",
              name: "_countries",
              type: "uint16[]",
            },
          ],
          name: "batchRegisterIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "contains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "deleteIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "identity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityStorage",
          outputs: [
            {
              internalType: "contract IIdentityRegistryStorage",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_trustedIssuersRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_claimTopicsRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_identityStorage",
              type: "address",
            },
          ],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "investorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "isVerified",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "issuersRegistry",
          outputs: [
            {
              internalType: "contract ITrustedIssuersRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "registerIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "setClaimTopicsRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistryStorage",
              type: "address",
            },
          ],
          name: "setIdentityRegistryStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_trustedIssuersRegistry",
              type: "address",
            },
          ],
          name: "setTrustedIssuersRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "topicsRegistry",
          outputs: [
            {
              internalType: "contract IClaimTopicsRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "updateCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "updateIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 11,
    },
    IdentityRegistryStorage: {
      address: "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryUnbound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityStored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityUnstored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "addIdentityToStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "bindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "linkedIdentityRegistries",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "modifyStoredIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "modifyStoredInvestorCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "removeIdentityFromStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedIdentity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedInvestorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "unbindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 13,
    },
    ModularCompliance: {
      address: "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "ModuleAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes4",
              name: "selector",
              type: "bytes4",
            },
          ],
          name: "ModuleInteraction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "ModuleRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenUnbound",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "addModule",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "bindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "callModuleFunction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "canTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "created",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "destroyed",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getModules",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTokenBound",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "isModuleBound",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "removeModule",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "transferred",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "unbindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 15,
    },
    TREXFactory: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_addr",
              type: "address",
            },
          ],
          name: "Deployed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_implementationAuthority",
              type: "address",
            },
          ],
          name: "ImplementationAuthoritySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_ir",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_irs",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_tir",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_ctr",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_mc",
              type: "address",
            },
            {
              indexed: true,
              internalType: "string",
              name: "_salt",
              type: "string",
            },
          ],
          name: "TREXSuiteDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_salt",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "symbol",
                  type: "string",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "irs",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ONCHAINID",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "irAgents",
                  type: "address[]",
                },
                {
                  internalType: "address[]",
                  name: "tokenAgents",
                  type: "address[]",
                },
                {
                  internalType: "address[]",
                  name: "complianceModules",
                  type: "address[]",
                },
                {
                  internalType: "bytes[]",
                  name: "complianceSettings",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ITREXFactory.TokenDetails",
              name: "_tokenDetails",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256[]",
                  name: "claimTopics",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "issuers",
                  type: "address[]",
                },
                {
                  internalType: "uint256[][]",
                  name: "issuerClaims",
                  type: "uint256[][]",
                },
              ],
              internalType: "struct ITREXFactory.ClaimDetails",
              name: "_claimDetails",
              type: "tuple",
            },
          ],
          name: "deployTREXSuite",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementationAuthority",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_salt",
              type: "string",
            },
          ],
          name: "getToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contract",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "recoverContractOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "implementationAuthority_",
              type: "address",
            },
          ],
          name: "setImplementationAuthority",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "tokenDeployed",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 5,
    },
    TREXImplementationAuthority: {
      address: "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_ctrImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_irImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_irsImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tirImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_mcImplementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "iaFactory",
              type: "address",
            },
          ],
          name: "IAFactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newImplementationAuthority",
              type: "address",
            },
          ],
          name: "ImplementationAuthorityChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bool",
              name: "referenceStatus",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "address",
              name: "trexFactory",
              type: "address",
            },
          ],
          name: "ImplementationAuthoritySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "trexFactory",
              type: "address",
            },
          ],
          name: "TREXFactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "trex",
              type: "tuple",
            },
          ],
          name: "TREXVersionAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "trex",
              type: "tuple",
            },
          ],
          name: "TREXVersionFetched",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
          ],
          name: "VersionUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          name: "addAndUseTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          name: "addTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "changeImplementationAuthority",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "ctrImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "fetchVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCTRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "getContracts",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentVersion",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getIRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getIRSImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMCImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReferenceContract",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTIRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTREXFactory",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "irImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "irsImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isReferenceContract",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "mcImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "setIAFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "setTREXFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tirImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "useTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 19,
    },
    Token: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bool",
              name: "_isFrozen",
              type: "bool",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "AddressFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
          ],
          name: "ComplianceAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_lostWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_investorOnchainID",
              type: "address",
            },
          ],
          name: "RecoverySuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensUnfrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "_newName",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "_newSymbol",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "_newDecimals",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "string",
              name: "_newVersion",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newOnchainID",
              type: "address",
            },
          ],
          name: "UpdatedTokenInformation",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchBurn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_fromList",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchForcedTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchFreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchMint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "bool[]",
              name: "_freeze",
              type: "bool[]",
            },
          ],
          name: "batchSetAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchUnfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "compliance",
          outputs: [
            {
              internalType: "contract IModularCompliance",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "forcedTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "freezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getFrozenTokens",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityRegistry",
          outputs: [
            {
              internalType: "contract IIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_decimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_onchainID",
              type: "address",
            },
          ],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "isFrozen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "onchainID",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_lostWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "_investorOnchainID",
              type: "address",
            },
          ],
          name: "recoveryAddress",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_freeze",
              type: "bool",
            },
          ],
          name: "setAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
          ],
          name: "setCompliance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "setIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "setName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_onchainID",
              type: "address",
            },
          ],
          name: "setOnchainID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
          ],
          name: "setSymbol",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "unfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 7,
    },
    TrustedIssuersRegistry: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "ClaimTopicsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "TrustedIssuerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
          ],
          name: "TrustedIssuerRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "addTrustedIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
          ],
          name: "getTrustedIssuerClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTrustedIssuers",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "getTrustedIssuersForClaimTopic",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "hasClaimTopic",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
          ],
          name: "isTrustedIssuer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
          ],
          name: "removeTrustedIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "updateIssuerClaimTopics",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 17,
    },
  },
  11155111: {
    ClaimTopicsRegistry: {
      address: "0x3C899937D054642254d0c86133cb9eA28B7Dd355",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "ClaimTopicRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "addClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "removeClaimTopic",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066279,
    },
    Identity: {
      address: "0xff3aD7ef7933d782F09dB4365E3644925B6dfc27",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_isLibrary",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "Approved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "claimId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "ClaimRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "Executed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionFailed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "ExecutionRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "purpose",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
          ],
          name: "KeyRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "addClaim",
          outputs: [
            {
              internalType: "bytes32",
              name: "claimRequestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_type",
              type: "uint256",
            },
          ],
          name: "addKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_approve",
              type: "bool",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "execute",
          outputs: [
            {
              internalType: "uint256",
              name: "executionId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "getClaim",
          outputs: [
            {
              internalType: "uint256",
              name: "topic",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "scheme",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_topic",
              type: "uint256",
            },
          ],
          name: "getClaimIdsByTopic",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "claimIds",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKey",
          outputs: [
            {
              internalType: "uint256[]",
              name: "purposes",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "keyType",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
          ],
          name: "getKeyPurposes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "_purposes",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "getKeysByPurpose",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "dataHash",
              type: "bytes32",
            },
          ],
          name: "getRecoveredAddress",
          outputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "initialManagementKey",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "sig",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "isClaimValid",
          outputs: [
            {
              internalType: "bool",
              name: "claimValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "keyHasPurpose",
          outputs: [
            {
              internalType: "bool",
              name: "result",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_claimId",
              type: "bytes32",
            },
          ],
          name: "removeClaim",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_key",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_purpose",
              type: "uint256",
            },
          ],
          name: "removeKey",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addClaim: "contracts/interface/IIdentity.sol",
        addKey: "contracts/interface/IIdentity.sol",
        approve: "contracts/interface/IIdentity.sol",
        execute: "contracts/interface/IIdentity.sol",
        getClaim: "contracts/interface/IIdentity.sol",
        getClaimIdsByTopic: "contracts/interface/IIdentity.sol",
        getKey: "contracts/interface/IIdentity.sol",
        getKeyPurposes: "contracts/interface/IIdentity.sol",
        getKeysByPurpose: "contracts/interface/IIdentity.sol",
        isClaimValid: "contracts/interface/IIdentity.sol",
        keyHasPurpose: "contracts/interface/IIdentity.sol",
        removeClaim: "contracts/interface/IIdentity.sol",
        removeKey: "contracts/interface/IIdentity.sol",
        version: "contracts/version/Version.sol",
      },
      deployedOnBlock: 9066791,
    },
    IdentityRegistry: {
      address: "0x6bDdC158797F14A12edCfb76693dF75568429E86",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "ClaimTopicsRegistrySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityStorage",
              type: "address",
            },
          ],
          name: "IdentityStorageSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "trustedIssuersRegistry",
              type: "address",
            },
          ],
          name: "TrustedIssuersRegistrySet",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "contract IIdentity[]",
              name: "_identities",
              type: "address[]",
            },
            {
              internalType: "uint16[]",
              name: "_countries",
              type: "uint16[]",
            },
          ],
          name: "batchRegisterIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "contains",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "deleteIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "identity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityStorage",
          outputs: [
            {
              internalType: "contract IIdentityRegistryStorage",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_trustedIssuersRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_claimTopicsRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_identityStorage",
              type: "address",
            },
          ],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "investorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "isVerified",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "issuersRegistry",
          outputs: [
            {
              internalType: "contract ITrustedIssuersRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "registerIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_claimTopicsRegistry",
              type: "address",
            },
          ],
          name: "setClaimTopicsRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistryStorage",
              type: "address",
            },
          ],
          name: "setIdentityRegistryStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_trustedIssuersRegistry",
              type: "address",
            },
          ],
          name: "setTrustedIssuersRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "topicsRegistry",
          outputs: [
            {
              internalType: "contract IClaimTopicsRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "updateCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "updateIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066280,
    },
    IdentityRegistryStorage: {
      address: "0xaC279D30f6a2468C0b2C34d7f517b6142684d561",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint16",
              name: "country",
              type: "uint16",
            },
          ],
          name: "CountryModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "oldIdentity",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "newIdentity",
              type: "address",
            },
          ],
          name: "IdentityModified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryUnbound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityStored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "investorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract IIdentity",
              name: "identity",
              type: "address",
            },
          ],
          name: "IdentityUnstored",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "addIdentityToStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "bindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "linkedIdentityRegistries",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "contract IIdentity",
              name: "_identity",
              type: "address",
            },
          ],
          name: "modifyStoredIdentity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint16",
              name: "_country",
              type: "uint16",
            },
          ],
          name: "modifyStoredInvestorCountry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "removeIdentityFromStorage",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedIdentity",
          outputs: [
            {
              internalType: "contract IIdentity",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "storedInvestorCountry",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "unbindIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066281,
    },
    ModularCompliance: {
      address: "0x2b5bCD69c055c3B96F8Bf39AaCEDA5FbeB8CC41d",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "ModuleAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes4",
              name: "selector",
              type: "bytes4",
            },
          ],
          name: "ModuleInteraction",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "ModuleRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenBound",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "TokenUnbound",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "addModule",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "bindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "callModuleFunction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "canTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "created",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "destroyed",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getModules",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTokenBound",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "isModuleBound",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_module",
              type: "address",
            },
          ],
          name: "removeModule",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "transferred",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "unbindToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066282,
    },
    TREXFactory: {
      address: "0xcB97f750cd82377F48C71B41ad46E416Fc2cdB02",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_addr",
              type: "address",
            },
          ],
          name: "Deployed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_implementationAuthority",
              type: "address",
            },
          ],
          name: "ImplementationAuthoritySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_ir",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_irs",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_tir",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_ctr",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "_mc",
              type: "address",
            },
            {
              indexed: true,
              internalType: "string",
              name: "_salt",
              type: "string",
            },
          ],
          name: "TREXSuiteDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_salt",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "symbol",
                  type: "string",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
                {
                  internalType: "address",
                  name: "irs",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ONCHAINID",
                  type: "address",
                },
                {
                  internalType: "address[]",
                  name: "irAgents",
                  type: "address[]",
                },
                {
                  internalType: "address[]",
                  name: "tokenAgents",
                  type: "address[]",
                },
                {
                  internalType: "address[]",
                  name: "complianceModules",
                  type: "address[]",
                },
                {
                  internalType: "bytes[]",
                  name: "complianceSettings",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ITREXFactory.TokenDetails",
              name: "_tokenDetails",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256[]",
                  name: "claimTopics",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "issuers",
                  type: "address[]",
                },
                {
                  internalType: "uint256[][]",
                  name: "issuerClaims",
                  type: "uint256[][]",
                },
              ],
              internalType: "struct ITREXFactory.ClaimDetails",
              name: "_claimDetails",
              type: "tuple",
            },
          ],
          name: "deployTREXSuite",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementationAuthority",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_salt",
              type: "string",
            },
          ],
          name: "getToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_contract",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "recoverContractOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "implementationAuthority_",
              type: "address",
            },
          ],
          name: "setImplementationAuthority",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "tokenDeployed",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066277,
    },
    TREXImplementationAuthority: {
      address: "0x23a4CbeB9516D12a33d09809933AC5fff7D35754",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_ctrImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_irImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_irsImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_tirImplementation",
              type: "address",
            },
            {
              internalType: "address",
              name: "_mcImplementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "iaFactory",
              type: "address",
            },
          ],
          name: "IAFactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newImplementationAuthority",
              type: "address",
            },
          ],
          name: "ImplementationAuthorityChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bool",
              name: "referenceStatus",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "address",
              name: "trexFactory",
              type: "address",
            },
          ],
          name: "ImplementationAuthoritySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "trexFactory",
              type: "address",
            },
          ],
          name: "TREXFactorySet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "trex",
              type: "tuple",
            },
          ],
          name: "TREXVersionAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "trex",
              type: "tuple",
            },
          ],
          name: "TREXVersionFetched",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              indexed: true,
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "version",
              type: "tuple",
            },
          ],
          name: "VersionUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          name: "addAndUseTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          name: "addTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "changeImplementationAuthority",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "ctrImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "fetchVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCTRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "getContracts",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "tokenImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ctrImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "irsImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tirImplementation",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "mcImplementation",
                  type: "address",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.TREXContracts",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentVersion",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getIRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getIRSImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMCImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReferenceContract",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTIRImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTREXFactory",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "irImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "irsImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isReferenceContract",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "mcImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "setIAFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "setTREXFactory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tirImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "major",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "minor",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "patch",
                  type: "uint8",
                },
              ],
              internalType: "struct ITREXImplementationAuthority.Version",
              name: "",
              type: "tuple",
            },
          ],
          name: "useTREXVersion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9069264,
    },
    Token: {
      address: "0x4D2F6d479Af24106E3F07E21C6BDCbebEBdF1b83",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bool",
              name: "_isFrozen",
              type: "bool",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "AddressFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "AgentRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
          ],
          name: "ComplianceAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "IdentityRegistryAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_lostWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newWallet",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_investorOnchainID",
              type: "address",
            },
          ],
          name: "RecoverySuccess",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensFrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "TokensUnfrozen",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "_newName",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "_newSymbol",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "_newDecimals",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "string",
              name: "_newVersion",
              type: "string",
            },
            {
              indexed: true,
              internalType: "address",
              name: "_newOnchainID",
              type: "address",
            },
          ],
          name: "UpdatedTokenInformation",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "addAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchBurn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_fromList",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchForcedTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchFreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchMint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "bool[]",
              name: "_freeze",
              type: "bool[]",
            },
          ],
          name: "batchSetAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_toList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "_userAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_amounts",
              type: "uint256[]",
            },
          ],
          name: "batchUnfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "compliance",
          outputs: [
            {
              internalType: "contract IModularCompliance",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "forcedTransfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "freezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getFrozenTokens",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "identityRegistry",
          outputs: [
            {
              internalType: "contract IIdentityRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_decimals",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_onchainID",
              type: "address",
            },
          ],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "isAgent",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "isFrozen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "onchainID",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_lostWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "_newWallet",
              type: "address",
            },
            {
              internalType: "address",
              name: "_investorOnchainID",
              type: "address",
            },
          ],
          name: "recoveryAddress",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_agent",
              type: "address",
            },
          ],
          name: "removeAgent",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_freeze",
              type: "bool",
            },
          ],
          name: "setAddressFrozen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_compliance",
              type: "address",
            },
          ],
          name: "setCompliance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_identityRegistry",
              type: "address",
            },
          ],
          name: "setIdentityRegistry",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "setName",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_onchainID",
              type: "address",
            },
          ],
          name: "setOnchainID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
          ],
          name: "setSymbol",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_from",
              type: "address",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "unfreezePartialTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066278,
    },
    TrustedIssuersRegistry: {
      address: "0xe9A30c2FB9dD5DA29c9479461598F1fb64411236",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "ClaimTopicsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "claimTopics",
              type: "uint256[]",
            },
          ],
          name: "TrustedIssuerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IClaimIssuer",
              name: "trustedIssuer",
              type: "address",
            },
          ],
          name: "TrustedIssuerRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "addTrustedIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
          ],
          name: "getTrustedIssuerClaimTopics",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTrustedIssuers",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "claimTopic",
              type: "uint256",
            },
          ],
          name: "getTrustedIssuersForClaimTopic",
          outputs: [
            {
              internalType: "contract IClaimIssuer[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_claimTopic",
              type: "uint256",
            },
          ],
          name: "hasClaimTopic",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "init",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_issuer",
              type: "address",
            },
          ],
          name: "isTrustedIssuer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
          ],
          name: "removeTrustedIssuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IClaimIssuer",
              name: "_trustedIssuer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_claimTopics",
              type: "uint256[]",
            },
          ],
          name: "updateIssuerClaimTopics",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9066283,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
